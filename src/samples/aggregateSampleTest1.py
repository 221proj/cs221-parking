import matplotlib.pyplot as plt



DIST_RANGE = 'NA'


##########################################
#0.06

"""

a1 = [(['202052'], 0.064835606743166227, 6.0), \
(['202052', '331041'], 0.035120453786483936, 17.0), \
(['202052', '331041', '671001'], 0.030282302010352213, 26.0), \
(['202052', '331041', '671001', '671002'], 0.02499570149468237, 37.0)]
##########################################
#0.07
a2 = [ (['671001'], 0.04228360544817869, 9.0), \
(['671001', '671002'], 0.029247081756516958, 20.0), \
(['671001', '671002', '331042'], 0.021372718612770899, 39.0), \
(['671001', '671002', '331042', '202051'], 0.0210664968154557, 46.0), \
(['671001', '671002', '331042', '202051', '202052'], 0.021164382827864908, 52.0), \
(['671001', '671002', '331042', '202051', '202052', '331043'], 0.019677204940052317, 61.0), \
(['671001', '671002', '331042', '202051', '202052', '331043', '202054'], 0.019350258947712445, 64.0), \
(['671001', '671002', '331042', '202051', '202052', '331043', '202054', '331041'], 0.017953718366285638, 75.0)]







###########################################
# 0.08
a3 = [(['330032'], 0.00093068760546295443, 11.0),\
(['330032', '671001'], 0.019230105647692335, 20.0), \
(['330032', '671001', '671002'], 0.018974971159481237, 31.0), \
(['330032', '671001', '671002', '331042'], 0.016517096281102494, 50.0), \
(['330032', '671001', '671002', '331042', '202051'], 0.016966699213353777, 57.0), \
(['330032', '671001', '671002', '331042', '202051', '202052'], 0.017426021767140549, 63.0), \
(['330032', '671001', '671002', '331042', '202051', '202052', '331043'], 0.016660449500250262, 72.0), \
(['330032', '671001', '671002', '331042', '202051', '202052', '331043', '202054'], 0.016520637939828709, 75.0), \
(['330032', '671001', '671002', '331042', '202051', '202052', '331043', '202054', '331041'], 0.015679304255887712, 86.0)]


############################################
# 0.11 mile

b = [ (['330031'], 0.021166268050653237, 24.0), \
(['330031', '330022'], 0.018036099379687431, 31.0), \
(['330031', '330022', '330032'], 0.013399784792850842, 42.0), \
(['330031', '330022', '330032', '202062'], 0.01716189297022843, 59.0),\
(['330031', '330022', '330032', '202062', '202051'], 0.017143937580572307, 66.0), \
(['330031', '330022', '330032', '202062', '202051', '671012'], 0.016232215888670465, 77.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011'], 0.015215527063668024, 90.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001'], 0.015018872044770679, 99.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002'], 0.014122533292778515, 110.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042'], 0.012933913486920974, 129.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042'], 0.012571925907326056, 138.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042', '331032'], 0.012531682408552052, 144.0) , \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042', '331032', '202052'], 0.012527149167124937, 150.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042', '331032', '202052', '331043'], 0.012288689144052175, 159.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042', '331032', '202052', '331043', '202054'], 0.012198947684780671, 162.0), \
(['330031', '330022', '330032', '202062', '202051', '671012', '671011', '671001', '671002', '331042', '202042', '331032', '202052', '331043', '202054', '331041'], 0.011875865571823198, 173.0) ]



b2 = [(['330031'], 0.021166268050653237, 24.0),\
(['330031', '330032'], 0.014649272093328671, 35.0),\
(['330031', '330032', '330034'], 0.014922669241750173, 48.0),\
(['330031', '330032', '330034', '202062'], 0.017484374724133597, 65.0),\
(['330031', '330032', '330034', '202062', '671001'], 0.01696134880647816, 74.0),\
(['330031', '330032', '330034', '202062', '671001', '671002'], 0.015763104460798177, 85.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051'], 0.015138008340213543, 101.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042'], 0.014559719403897328, 110.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032'], 0.014415769183984219, 116.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041'], 0.01425276160454346, 122.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061'], 0.014015520382312786, 138.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031'], 0.012803778392241226, 158.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042'], 0.011938119975952453, 177.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043'], 0.01200916250892981, 183.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044'], 0.01193100102611205, 189.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061'], 0.011934848975309229, 202.0) ,\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022'], 0.011584309226077836, 209.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021'], 0.01126023062593175, 217.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012'], 0.011069057048553751, 228.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011'], 0.010844448900714117, 241.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051'], 0.010811511414045183, 248.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042'], 0.010741107707917375, 265.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052'], 0.01074094405257521, 271.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043'], 0.010574507389792848, 280.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054'], 0.01053667027303842, 283.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041'], 0.010328912959813216, 294.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041', '203052'], 0.010094861509176213, 312.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041', '203052', '203053'], 0.010173488119308047, 318.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041', '203052', '203053', '203051'], 0.010214144477072194, 322.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041', '203052', '203053', '203051', '471061'], 0.010072670165184327, 344.0),\
(['330031', '330032', '330034', '202062', '671001', '671002', '331051', '202042', '331032', '202041', '202061', '331031', '331042', '203043', '203044', '203061', '330022', '330021', '671012', '671011', '202051', '330042', '202052', '331043', '202054', '331041', '203052', '203053', '203051', '471061', '471062'], 0.010050969088016596, 353.0)]



"""


def reformatData(v1):
	X = list()
	Y = list()
	print len(v1[0])
	
	DIST_RANGE = len(v1[0])

	size = len(v1[0]) 
	for i in range(size):
		X.append(v1[0][i])
		Y.append(v1[1][i])

	return (X, Y) 	

"""

xVals, yVals = reformatData(b2)	

plt.figure()
plt.plot(xVals, yVals)
plt.ylabel('estimation error')
plt.xlabel('aggregated spots')
plt.show()
"""


def checkTheFile(path):
	numV = [] 	
	errV = []
	fp = open(path, 'r')
	for line in fp:
		#print line
		#_temp = len(line)
		_temp = line 
		#print "********", 
		i = 0
		char = _temp[0]
		while char is not ']':
			i +=1 
			#trim = _temp[2:-3]
			char = _temp[i]
		
		items = _temp[i: -3]

		items = items.split(",")
		#print items[-1], items[-2]
		#print len(_temp)
		#print items[-1]

		#print len(items)
 		#print items
		numV.append(float(items[-1]))
		errV.append(float(items[-2])) 	

	fp.close()	

	#print numV, errV

	return (numV, errV)


#PATH_A = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/s_10_20_out_1_9_1954.txt"
#PATH_B = "s_10_20_out_1_9_1954.txt"
#PATH_C = "s_10_20_out_1_9_2218.txt"
#PATH_D = "s_10_20_out_1_13_1652_v2.txt"

PATH_B = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/s_1hour_beg_end_out_1_25_2215.txt"
PATH_C = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/s_2hour_beg_end_out_1_25_2228.txt"
PATH_D = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/s_beg_end_out_1_25_2143.txt"



PATH_D_1 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/pier39s_1hour_beg_end_out_1_28_1227.txt"
PATH_D_2 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/pier39s_2hour_beg_end_out_1_28_128.txt"
PATH_D_3 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/pier39s_3hour_beg_end_out_1_28_122.txt"

PATH_C_1 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/MKSTs_1hour_beg_end_out_1_28_1246.txt"
PATH_C_2 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/MKSTs_2hour_beg_end_out_1_28_1249.txt"
PATH_C_3 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/MKSTs_3hour_beg_end_out_1_28_1252.txt"


PATH_B_1 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/ATTs_1hour_beg_end_out_1_28_1328.txt"
PATH_B_2 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/ATTs_2hour_beg_end_out_1_28_1321.txt"
PATH_B_3 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/ATTs_3hour_beg_end_out_1_28_1315.txt"

PATHSET = [PATH_B, PATH_C, PATH_D]
PATHSET2 = [PATH_C_1, PATH_C_2, PATH_C_3]

PATHSET3 = [PATH_D_1, PATH_D_2, PATH_D_3]

PATHSET4 = [PATH_B_1, PATH_B_2, PATH_B_3]

##################################
Ridus_PATH_B_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/ATT_mileRange_1ahead_1_28_1438.txt"
Ridus_PATH_C_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/CITYHALL_mileRange_1ahead_1_28_1.txt"
Ridus_PATH_D_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Pier39_mileRange_1ahead_1_28_151.txt"
# location 3 
Ridus_PATH_E_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Loc3_mileRange_1ahead_1_28_162.txt"
#Ridus_PATH_F_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Loc4_mileRange_1ahead_1_28_164.txt"
Ridus_PATH_G_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Loc6_mileRange_1ahead_1_28_165.txt"
Ridus_PATH_H_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Loc7_mileRange_1ahead_1_28_17.txt"
Ridus_PATH_I_1= "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/Loc8_mileRange_1ahead_1_28_171.txt"
##############
Ridus_PATH_P_11 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/Loc11_mileRange_1ahead_1_28_18.txt"
Ridus_PATH_P_21 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/Loc121_mileRange_1ahead_1_28_181.txt"
Ridus_PATH_P_31 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/Loc131_mileRange_1ahead_1_28_182.txt"
Ridus_PATH_P_41 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/Loc141_mileRange_1ahead_1_28_182.txt"
Ridus_PATH_L_11 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/Loc211_mileRange_1ahead_1_28_182.txt"

###############
R_P_CITYH_1 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocCITYHALL2_mileRange_1ahead_2_3_225.txt"
R_P_CITYH_2 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocCITYHALL4_mileRange_1ahead_2_3_23.txt"
R_P_CITYH_3 = "/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocCITYHALL7_mileRange_1ahead_2_3_231.txt"

###########
R_P_BW_1 ="/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocBW0_mileRange_1ahead_2_3_221.txt"
R_P_BW_2 ="/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocBW1_mileRange_1ahead_2_3_221.txt"
R_P_BW_3 ="/home/seanqian/Desktop/dev/cs221/repo-221proj/cs221-parking/src/samples/milerange/LocBW3_mileRange_1ahead_2_3_222.txt"


##########
PATHSET5 = [Ridus_PATH_B_1, Ridus_PATH_C_1, Ridus_PATH_D_1, Ridus_PATH_E_1, \
			Ridus_PATH_G_1, Ridus_PATH_H_1, Ridus_PATH_I_1, \
			Ridus_PATH_P_11, Ridus_PATH_P_21, Ridus_PATH_P_31, Ridus_PATH_P_41, \
			Ridus_PATH_L_11 \
			 ]
PATHSET_CITYH = [R_P_CITYH_1, R_P_CITYH_2,R_P_CITYH_3]
PATHSET_BW = [R_P_BW_1, R_P_BW_2, R_P_BW_3]

P_SET = PATHSET5+PATHSET_CITYH +PATHSET_BW  

NAMESET = ["ATT park", "City Hall", "Pier39"]

NAMESET3 = ["ATT park", "City Hall", "Pier39", "Loc3"]

NAMESET2 = ["1hour ahead", "2hour ahead", "3hour ahead"]

def plotErrAgg(path):

	data = checkTheFile(path)	
	#print data 
	#reformatData(data)

	xVals, yVals = reformatData(data)	
	yV = [round(v, 6) for v in yVals]



	#print yV
	plt.plot(xVals, yV, 'go')
	#plt.ylabel('estimation error')
	#plt.xlabel('radius (miles)')
	#plt.xlim(0, xVals[-1])
	#plt.xlim(0, 0.2)
	#plt.ylim(0, 0.4)



def run():
	#plt.figure()
	dFrame = [ [] for i in range(15) ]
	for i, val in enumerate(P_SET):
		#plotErrAgg(val)
		data = checkTheFile(val) 
		xVals, yVals = reformatData(data)
		#yV = [round(v, 6) for v in yVals]
		for j, v in enumerate(yVals):			
			yV = round(v, 6)			
			dFrame[j].append(yV)

		#print yV
	
	ticks = [ 0.01*i+0.05  for  i in range(15)]
	#dFrame.append(yV)
	#print dFrame	
	fig = plt.figure()
	ax = fig.add_subplot(111)
	#plt.xAxis(xVals)
	plt.boxplot(dFrame) 
	plt.xticks( [i for i in range(1,16)] ,ticks)
	ax.set_xlabel('radius (mile)')
	ax.set_ylabel('forecast error (1hr ahead)')
	plt.show()




def runV2():
	fig = plt.figure()
	for i, val in enumerate(P_SET):
		plotErrAgg(val)

	plt.ylabel('estimation error')
	plt.xlabel('radius (miles)')
	#plt.xlim(0, xVals[-1])
	plt.xlim(0.04, 0.2)
	plt.ylim(0, 0.4)	

	plt.show()

runV2()	


#plt.legend(NAMESET)
#plt.title(str(NAMESET))

	#plt.title(" error vs distance ")
	#plt.show()

#run() 	